extends include/_post_base.pug
block title
  title Turning your application into a web app with STAR

block append head
  meta(name="description", content="Converting your python application/script into a web app or a discord bot to run remotely")
  meta(name="keywords", content="web, web app, star, python, api, redis, discord, website, website builder")

block heading
  |Turning your application into a web app with STAR
block date
  |10 May, 2020
block body
  p
    |In this world of the internet, there often comes a time that you
    |write a script or a program that needs to be deployed as a website
    |or a web app, doing this without the prior background in the field
    |can be difficult and at times demotivating.
  p
    |Presenting to you STAR. With STAR in a few steps you can convert
    |you application into a website or run it from
    |
    a(href="https://discord.com/") discord
    |, yes the discord we all love.

  div.github-card(data-github="abhishek-deshmukh/star", data-width="400", data-height="155", data-theme="default")
  p
    | This is just the web app
    br
    a.button(href="https://deshmukh.ml/static/STAR_web-v0.0.0.tar.gz") Download STAR web
  p
    | This is just the discord bot
    br
    a.button(href="https://deshmukh.ml/static/STAR_bot-v0.0.0.tar.gz") Down STAR bot
  p
    | This has both the web app and the bot
    br
    a.button(href="https://deshmukh.ml/static/STAR-v0.0.0.tar.gz") DOwnload STAR complete

  p Once you have downloaded the tar.gz extract it into a folder
  .code
    | $ tar xvzf &lt;filename&gt;.tar.gz
  p Your direcory structure will look something like this
  .code.dir
    | .
    br
    |             &boxvr;&boxh;&boxh; deploy.sh
    br
    |             &boxvr;&boxh;&boxh; main.py
    br
    |             &boxvr;&boxh;&boxh; .env
    br
    |             &boxvr;&boxh;&boxh; requirements.txt
    br
    |             &boxvr;&boxh;&boxh; STAR_api.py
    br
    |             &boxvr;&boxh;&boxh; STAR_bot.py
    br
    |             &boxvr;&boxh;&boxh; STAR_website
    br
    |             &boxv;&nbsp;&nbsp; &boxvr;&boxh;&boxh; css
    br
    |             &boxv;&nbsp;&nbsp; &boxvr;&boxh;&boxh; favicon.ico
    br
    |             &boxv;&nbsp;&nbsp; &boxvr;&boxh;&boxh; index.html
    br
    |             &boxv;&nbsp;&nbsp; &boxur;&boxh;&boxh; js
    br
    |             &boxur;&boxh;&boxh;STAR_worker.py
    br
  p We will get back to this
  p Next step is installing redis
  h2 Installing Redis
  p Redis is most probably in your distribution&apos;s package manager
  .code
    | # debian based systems (Ubuntu etc...)
    br
    |             $ sudo apt-get install redis
    br
    |             # Arch based systems (Manjaro etc...)
    br
    |             $ sudo pacman -S redis
  p
    | If you do not find it in your distribution&apos;s package manager you can
    | always get it from it&apos;s website
    a(href='http://redis.io/download') http://redis.io
  p While that is happening lets go to the next step
  h2 Installing Python dependencies
  p
    | Make sure you are running python3.x
  p
    | If you are running some kind of virtual environment now is the time
    | to be in it.
  .code
    | $ pip install -r requirements.txt
  p That will install all the requirements.
  h2 Bot specific steps
  p
    | If you have are planning on using the bot you need to get a api_key
    | from discord for you bot it&apos;s pretty simple.
  p
    a(href='3.html') How to make a discord bot
    | . This post explains
    |             step by step how to get an api key for your discord bot.
  p
  p
    | Once you have the api key put it in the
    span.code .env
    |  file
  h2 Putting your code in
  p We are one step away from deployment
  p if you open up the main.py file you will find this
  .code
    | # main.py
    br
    |             def main():
    br
    tab return &quot;something&quot;
  p This is where you drop the code you want to run
  p
    | You can put multiple functions in the file, main can call other
    | functions or files, basically any valid python3.x function will
    | work.
  p
    | Once you put in the code lets get to the tricky part, say you are
    | writing a monte carlo simulation to calculate the ratio of are under
    | the inside a quarter of the circle and the square
  p
    | Do not worry if you do not understand the math, this is about the
    | parameters and the functions. Your code will look something like
    | this.
  .code
    | from numpy.random import uniform
    br
    |             from sympy.parsing.sympy_parser
    br
    |             import eval_expr
    br
    |             import numpy
    br
    br
    |             NUMPY_DICT = {a: getattr(numpy, a) for a in dir(numpy)}
    br
    br
    |             def main(f, a, b, c, d, size):
    br
    tab &quot;&quot;&quot;Monte Carlo simulation&quot;&quot;&quot;
    br
    tab  xs = uniform(a, b, size)
    br
    tab  ys = uniform(c, d, size)
    br
    tab  area = (a - b) * (c - d)
    br
    tab  under = ys &lt; eval_exp{&quot;xs&quot;: xs}, NUMPY_DICT)
    br
    tab  ratio = sum(under) / size * area
    br
    tab  return ratio
    br
  p
    | Now we will be using type annotation on our main function&apos;s
    | parameters. Which basically means that we will write the type of the
    | parameters in front of the paramter like so.
  .code
    | def main(f: string, a: float, b: float, c: float, d: float, size:
    | int):
  p and we are done, now to deployment
  h2 Deployment
  p
    | Open up a terminal and go in the folder where the file was extracted
    | and run the
    span.code deploy.sh
    |  bash script
  .code
    | $ ./deploy.sh
  p
    | If everything goes right and you have some luck on your side you
    | will see a stream of text flowing ignore it. In about 10 seconds
    | that will have been deployed.
  p
    | If you are running the web app it will be hosted at
    span.code
      a(href='http://localhost:8000/') http://localhost:8000/
  p
    | If you downloaded the bot as well then open up discord and your
    | server and type in
    span.code help
    |  it will guide you
    |             through the commands on how to use it.
